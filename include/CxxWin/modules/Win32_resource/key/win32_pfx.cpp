/***************************************************************************//**
 * @file win32_pfx.cpp
 * @author StoneyDSP (nathanjhood@googlemail.com)
 *
 * @brief Contains pointers to named resources with external linkage, so that
 * their respective contents can be defined elsewhere. Also contains definitions
 * of functions that provide access to these specifically-named resources, which
 * necessitates external linkage.
 *
 * @version 1.0.0-init
 * @date 2023-08-24
 *
 * @copyright This file was generated by using Vector-of-Bool's excellent
 * 'CMakeRC' resource compiler script from CMake's template resources for
 * Windows. The results have been given minimal tweaks - mostly just text
 * formatting - to provide a similar interface to the rest of the project's
 * codebase. Please see 'cmrc.hpp' and Kitware.org for respective license
 * information.
 *
 ******************************************************************************/

#include "win32_pfx.hpp"

namespace CMakeRC::Key
{
namespace
{
/**
 * @brief Get the 'CMakeRC::Detail::IndexType' object.
 *
 * @return const 'IDXRES' &
 */
const IDXRES& GetRootIndex()
{
    static CMakeRC::Detail::Directory root_directory_;
    static CMakeRC::Detail::FileOrDirectory root_directory_fod{root_directory_};
    static CMakeRC::Detail::IndexType root_index;
    root_index.emplace("", &root_directory_fod);

    struct dir_inl
    {
        class CMakeRC::Detail::Directory& Directory;
    };

    dir_inl root_directory_dir{root_directory_};
    (void)root_directory_dir;

    root_index.emplace(
        "Windows_TemporaryKey.pfx",
        root_directory_dir.Directory.AddFile(
            "Windows_TemporaryKey.pfx",
            Windows_TemporaryKey::Windows_TemporaryKey_pfx_begin,
            Windows_TemporaryKey::Windows_TemporaryKey_pfx_end
        )
    );
    return root_index;
}
} // namespace

/**
 * @brief Get the 'CMakeRC::EmbeddedFileSystem' 'CMakeRC::Detail::IndexType'
 * object.
 *
 * @return 'FSEMBEDDED'
 */
FSEMBEDDED GetFileSystem()
{
    static auto& index = GetRootIndex();
    return CMakeRC::EmbeddedFileSystem{index};
}
} // namespace CMakeRC::Key
