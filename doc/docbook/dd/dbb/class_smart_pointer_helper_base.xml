<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_smart_pointer_helper_base" xml:lang="en-US">
<title>SmartPointerHelperBase&lt; First, ComClasses &gt; Class Template Reference</title>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary></indexterm>
<para>

<para>The &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; class. </para>
 
</para>
<para>
<computeroutput>#include &lt;win32_SmartPointer.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for SmartPointerHelperBase&lt; First, ComClasses &gt;:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../dd/dbb/class_smart_pointer_helper_base.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_smart_pointer_helper_base_1ac76861e9458ab17c981b2b76f5890321">SmartPointerHelperBase</link> (unsigned int initRef)</para>

<para>Construct a new &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; object. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_smart_pointer_helper_base_1aef037e04d1a2ee08824b405b077d4b09">~SmartPointerHelperBase</link> ()=default</para>

<para>Destroy the &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; object. </para>
</listitem>
            <listitem><para>ULONG STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e">AddRef</link> ()</para>

<para>Add a new reference to the pointer, increasing the counter by one. </para>
</listitem>
            <listitem><para>ULONG STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd">Release</link> ()</para>

<para>Release a reference to the pointer, decreasing the counter by one. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class Type &gt; </para><para>HRESULT STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base_1accdc2a95363ae4f3e76d5dc00e8fef38">castToType</link> (void **result)</para>

<para>Add a new reference to the pointer (increasing the counter by one), and attempt to cast to type &apos;T&apos;. </para>
</listitem>
            <listitem><para>HRESULT STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base_1a93350be3711ec44389ccb85607da79e8">QueryInterface</link> (REFIID riid, void **ppvObject)</para>

<para>Query a COM object for a pointer to one its interfaces, identifying the interface by a reference to its interface identifier (IID). </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>ULONG <link linkend="_class_smart_pointer_helper_base_1ad2bc91bd39ccd269a3eec9cdcce0f8cf">refCount</link></para>

<para>The underlying reference counter to the pointer. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;class First, class... ComClasses&gt;<?linebreak?>class SmartPointerHelperBase&lt; First, ComClasses &gt;</title></simplesect>

<para>The &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; class. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>First</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>ComClasses</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_smart_pointer_helper_base_1ac76861e9458ab17c981b2b76f5890321"/><section>
    <title>SmartPointerHelperBase()</title>
<indexterm><primary>SmartPointerHelperBase</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>SmartPointerHelperBase</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput><link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;<link linkend="_class_smart_pointer_helper_base">::SmartPointerHelperBase</link> (unsigned int initRef)</computeroutput></para><para>

<para>Construct a new &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; object. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>initRef</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_smart_pointer_helper_base_1aef037e04d1a2ee08824b405b077d4b09"/><section>
    <title>~SmartPointerHelperBase()</title>
<indexterm><primary>~SmartPointerHelperBase</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>~SmartPointerHelperBase</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput>virtual <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::~<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link> ( )<computeroutput>[virtual]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para><para>

<para>Destroy the &apos;<link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&apos; object. </para>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e"/><section>
    <title>AddRef()</title>
<indexterm><primary>AddRef</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>AddRef</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput>ULONG STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::AddRef</computeroutput></para><para>

<para>Add a new reference to the pointer, increasing the counter by one. </para>
</para>

<para><formalpara><title>Returns</title>

<para>ULONG </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_smart_pointer_helper_base_1accdc2a95363ae4f3e76d5dc00e8fef38"/><section>
    <title>castToType()</title>
<indexterm><primary>castToType</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>castToType</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><computeroutput>template&lt;class Type &gt; </computeroutput><para><computeroutput>HRESULT STDMETHODCALLTYPE <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::castToType (void ** result)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Add a new reference to the pointer (increasing the counter by one), and attempt to cast to type &apos;T&apos;. </para>
</para>

<para>The returned &apos;HRESULT&apos; can be checked so that any unsuccessful casts might then be freed with the &apos;<link linkend="_class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd">Release()</link>&apos; method.</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Type</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>result</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>HRESULT </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_smart_pointer_helper_base_1a93350be3711ec44389ccb85607da79e8"/><section>
    <title>QueryInterface()</title>
<indexterm><primary>QueryInterface</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>QueryInterface</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput>HRESULT <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::QueryInterface (REFIID riid, void ** ppvObject)<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Query a COM object for a pointer to one its interfaces, identifying the interface by a reference to its interface identifier (IID). </para>
</para>

<para>If the COM object implements the interface, then it returns a pointer to that interface after calling &apos;<link linkend="_class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e">SmartPointerHelperBase::AddRef()</link>&apos; on it.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>riid</entry><entry>
<para>A reference to the identifier of the interface being queried for.</para>
</entry>
                            </row>
                            <row>
<entry>ppvObject</entry><entry>
<para>The address of a pointer to an interface with the IID specified in the &apos;riid&apos; parameter. Because you pass the address of an interface pointer, the method can overwrite that address with the pointer to the interface being queried for. Upon successful return, *ppvObject (the dereferenced address) contains a pointer to the requested interface. If the object doesn&apos;t support the interface, the method sets *ppvObject (the dereferenced address) to nullptr.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>HRESULT; This method returns &apos;S_OK&apos; if the interface is supported, and &apos;E_NOINTERFACE&apos; otherwise. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd"/><section>
    <title>Release()</title>
<indexterm><primary>Release</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>Release</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput>ULONG <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::Release</computeroutput></para><para>

<para>Release a reference to the pointer, decreasing the counter by one. </para>
</para>

<para><formalpara><title>Returns</title>

<para>ULONG </para>
</formalpara>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_smart_pointer_helper_base_1ad2bc91bd39ccd269a3eec9cdcce0f8cf"/><section>
    <title>refCount</title>
<indexterm><primary>refCount</primary><secondary>SmartPointerHelperBase&lt; First, ComClasses &gt;</secondary></indexterm>
<indexterm><primary>SmartPointerHelperBase&lt; First, ComClasses &gt;</primary><secondary>refCount</secondary></indexterm>
<computeroutput>template&lt;class First , class... ComClasses&gt; </computeroutput><para><computeroutput>ULONG <link linkend="_class_smart_pointer_helper_base">SmartPointerHelperBase</link>&lt; First, ComClasses &gt;::refCount<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>The underlying reference counter to the pointer. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/CxxWin/modules/Win32_core/memory/<link linkend="_win32___smart_pointer_8hpp">win32_SmartPointer.hpp</link>include/CxxWin/modules/Win32_core/memory/<link linkend="_win32___smart_pointer_8cpp">win32_SmartPointer.cpp</link></section>
</section>
