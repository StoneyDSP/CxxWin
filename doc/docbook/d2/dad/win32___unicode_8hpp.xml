<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32___unicode_8hpp" xml:lang="en-US">
<title>include/CxxWin/modules/Win32_core/native/win32_Unicode.hpp File Reference</title>
<indexterm><primary>include/CxxWin/modules/Win32_core/native/win32_Unicode.hpp</primary></indexterm>
<para>

<para>Provides preprocessor handling for switching the behaviour of some important functions such as &apos;TEXT()&apos;, between &apos;ANSI&apos; and &apos;Unicode&apos; styles. </para>
 
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_win32_1_1_core_1_1_native_1_1_unicode_handler">Win32::Core::Native::UnicodeHandler</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_win32">Win32</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_win32_1_1_core">Win32::Core</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_win32_1_1_core_1_1_native">Win32::Core::Native</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a8d3caeafbdeaac188f81d07656727fd6">_WIN32_UNOCIDE_HPP_</link></para>

<para>Provides preprocessor handling for switching the behaviour of some important functions such as &apos;TEXT()&apos;, between &apos;ANSI&apos; and &apos;Unicode&apos; styles. </para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a273a349f02e26bdb5ba08461085bfe33">_NEED_UNICODE</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1abf9442f4ff47ef00d0eb7cb89c6dbe25">__NAME_AW</link>(func)&#160;&#160;&#160;func##A</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a070ad3774a36cbe5ba8a00456aa14145">__NAME_AW_EXT</link>(func,  ext)&#160;&#160;&#160;func##A##ext</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1acae9c8c2fef8d3d772158a9f0d09785a">__NAME_UAW</link>(func)&#160;&#160;&#160;func##_A</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a083ea8a4789494cf0fee2e814adccdd9">__NAME_UAW_EXT</link>(func,  ext)&#160;&#160;&#160;func##_A_##ext</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1aa26766709d1a5678faa69f7d5a791556">__STRING_AW</link>(str)&#160;&#160;&#160;str	/* same as TEXT() from winnt.h */</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1acc6ec428c466f0fb74fb301db19b500e">__PROCNAMEEXT_AW</link>&#160;&#160;&#160;&quot;A&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a2237d82d5ede1078d7fd34fc533efb4d">__TYPEDEF_AW</link>(type)&#160;&#160;&#160;    typedef <link linkend="_win32___unicode_8hpp_1abf9442f4ff47ef00d0eb7cb89c6dbe25">__NAME_AW</link>(type) type;</para>
</listitem>
            <listitem><para>#define <link linkend="_win32___unicode_8hpp_1a2967e34e4ed1c51a9f53d4707fa8a0cd">__TYPEDEF_UAW</link>(type)&#160;&#160;&#160;    typedef <link linkend="_win32___unicode_8hpp_1acae9c8c2fef8d3d772158a9f0d09785a">__NAME_UAW</link>(type) type;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Provides preprocessor handling for switching the behaviour of some important functions such as &apos;TEXT()&apos;, between &apos;ANSI&apos; and &apos;Unicode&apos; styles. </para>

<para><formalpara><title>Author</title>

<para>StoneyDSP (<link xlink:href="mailto:nathanjhood@googlemail.com">nathanjhood@googlemail.com</link>)</para>
</formalpara>
</para>

<para><formalpara><title>Version</title>

<para>1.0.0 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2023-08-31</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2023 </para>
</formalpara>
</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_win32___unicode_8hpp_1abf9442f4ff47ef00d0eb7cb89c6dbe25"/><section>
    <title>__NAME_AW</title>
<indexterm><primary>__NAME_AW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__NAME_AW</secondary></indexterm>
<para><computeroutput>#define __NAME_AW( func)&#160;&#160;&#160;func##A</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a070ad3774a36cbe5ba8a00456aa14145"/><section>
    <title>__NAME_AW_EXT</title>
<indexterm><primary>__NAME_AW_EXT</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__NAME_AW_EXT</secondary></indexterm>
<para><computeroutput>#define __NAME_AW_EXT( func,  ext)&#160;&#160;&#160;func##A##ext</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1acae9c8c2fef8d3d772158a9f0d09785a"/><section>
    <title>__NAME_UAW</title>
<indexterm><primary>__NAME_UAW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__NAME_UAW</secondary></indexterm>
<para><computeroutput>#define __NAME_UAW( func)&#160;&#160;&#160;func##_A</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a083ea8a4789494cf0fee2e814adccdd9"/><section>
    <title>__NAME_UAW_EXT</title>
<indexterm><primary>__NAME_UAW_EXT</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__NAME_UAW_EXT</secondary></indexterm>
<para><computeroutput>#define __NAME_UAW_EXT( func,  ext)&#160;&#160;&#160;func##_A_##ext</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1acc6ec428c466f0fb74fb301db19b500e"/><section>
    <title>__PROCNAMEEXT_AW</title>
<indexterm><primary>__PROCNAMEEXT_AW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__PROCNAMEEXT_AW</secondary></indexterm>
<para><computeroutput>#define __PROCNAMEEXT_AW&#160;&#160;&#160;&quot;A&quot;</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1aa26766709d1a5678faa69f7d5a791556"/><section>
    <title>__STRING_AW</title>
<indexterm><primary>__STRING_AW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__STRING_AW</secondary></indexterm>
<para><computeroutput>#define __STRING_AW( str)&#160;&#160;&#160;str	/* same as TEXT() from winnt.h */</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a2237d82d5ede1078d7fd34fc533efb4d"/><section>
    <title>__TYPEDEF_AW</title>
<indexterm><primary>__TYPEDEF_AW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__TYPEDEF_AW</secondary></indexterm>
<para><computeroutput>#define __TYPEDEF_AW( type)&#160;&#160;&#160;    typedef <link linkend="_win32___unicode_8hpp_1abf9442f4ff47ef00d0eb7cb89c6dbe25">__NAME_AW</link>(type) type;</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a2967e34e4ed1c51a9f53d4707fa8a0cd"/><section>
    <title>__TYPEDEF_UAW</title>
<indexterm><primary>__TYPEDEF_UAW</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>__TYPEDEF_UAW</secondary></indexterm>
<para><computeroutput>#define __TYPEDEF_UAW( type)&#160;&#160;&#160;    typedef <link linkend="_win32___unicode_8hpp_1acae9c8c2fef8d3d772158a9f0d09785a">__NAME_UAW</link>(type) type;</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a273a349f02e26bdb5ba08461085bfe33"/><section>
    <title>_NEED_UNICODE</title>
<indexterm><primary>_NEED_UNICODE</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>_NEED_UNICODE</secondary></indexterm>
<para><computeroutput>#define _NEED_UNICODE&#160;&#160;&#160;2</computeroutput></para></section>
<anchor xml:id="_win32___unicode_8hpp_1a8d3caeafbdeaac188f81d07656727fd6"/><section>
    <title>_WIN32_UNOCIDE_HPP_</title>
<indexterm><primary>_WIN32_UNOCIDE_HPP_</primary><secondary>win32_Unicode.hpp</secondary></indexterm>
<indexterm><primary>win32_Unicode.hpp</primary><secondary>_WIN32_UNOCIDE_HPP_</secondary></indexterm>
<para><computeroutput>#define _WIN32_UNOCIDE_HPP_</computeroutput></para><para>

<para>Provides preprocessor handling for switching the behaviour of some important functions such as &apos;TEXT()&apos;, between &apos;ANSI&apos; and &apos;Unicode&apos; styles. </para>
</para>
</section>
</section>
</section>
