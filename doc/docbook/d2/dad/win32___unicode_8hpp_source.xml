<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32___unicode_8hpp_source" xml:lang="en-US">
<title>win32_Unicode.hpp</title>
<indexterm><primary>include/CxxWin/modules/Win32_core/native/win32_Unicode.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
14 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
19 <emphasis role="preprocessor">#define&#32;_WIN32_UNOCIDE_HPP_</emphasis>
20 
21 <emphasis role="preprocessor">#if&#32;!defined(_NEED_UNICODE)</emphasis>
22 <emphasis role="comment">/*&#32;_NEED_UNICODE&#32;defined&#32;based&#32;on&#32;UNICODE&#32;flag&#32;*/</emphasis>
23 
24 <emphasis role="preprocessor">#if&#32;defined(UNICODE)</emphasis>
25 <emphasis role="preprocessor">#&#32;define&#32;_NEED_UNICODE&#32;1</emphasis>
26 <emphasis role="preprocessor">#&#32;define&#32;__NAME_AW(func)&#32;func##W</emphasis>
27 <emphasis role="preprocessor">#&#32;define&#32;__NAME_AW_EXT(func,ext)&#32;func##W##ext</emphasis>
28 <emphasis role="preprocessor">#&#32;define&#32;__NAME_UAW(func)&#32;func##_W</emphasis>
29 <emphasis role="preprocessor">#&#32;define&#32;__NAME_UAW_EXT(func,ext)&#32;func##_W_##ext</emphasis>
30 <emphasis role="preprocessor">#&#32;define&#32;__STRING_AW(str)&#32;L##str&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;same&#32;as&#32;TEXT()&#32;from&#32;winnt.h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
31 <emphasis role="preprocessor">#&#32;define&#32;__PROCNAMEEXT_AW&#32;&quot;W&quot;</emphasis>
32 <emphasis role="preprocessor">#else</emphasis>
33 <emphasis role="preprocessor">#&#32;define&#32;_NEED_UNICODE&#32;2</emphasis>
34 <emphasis role="preprocessor">#&#32;define&#32;__NAME_AW(func)&#32;func##A</emphasis>
35 <emphasis role="preprocessor">#&#32;define&#32;__NAME_AW_EXT(func,ext)&#32;func##A##ext</emphasis>
36 <emphasis role="preprocessor">#&#32;define&#32;__NAME_UAW(func)&#32;func##_A</emphasis>
37 <emphasis role="preprocessor">#&#32;define&#32;__NAME_UAW_EXT(func,ext)&#32;func##_A_##ext</emphasis>
38 <emphasis role="preprocessor">#&#32;define&#32;__STRING_AW(str)&#32;str&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;same&#32;as&#32;TEXT()&#32;from&#32;winnt.h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
39 <emphasis role="preprocessor">#&#32;define&#32;__PROCNAMEEXT_AW&#32;&quot;A&quot;</emphasis>
40 <emphasis role="preprocessor">#endif</emphasis>
41 
42 <emphasis role="preprocessor">#define&#32;__TYPEDEF_AW(type)&#32;&#32;\</emphasis>
43 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typedef&#32;__NAME_AW(type)&#32;type;</emphasis>
44 <emphasis role="preprocessor">#define&#32;__TYPEDEF_UAW(type)&#32;\</emphasis>
45 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;typedef&#32;__NAME_UAW(type)&#32;type;</emphasis>
46 
47 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;!defined(_NEED_UNICODE)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
48 
49 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_win32">Win32</link>
50 {
51 <emphasis role="keyword">namespace&#32;</emphasis>Core
52 {
53 <emphasis role="keyword">namespace&#32;</emphasis>Native
54 {
55 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_win32_1_1_core_1_1_native_1_1_unicode_handler">UnicodeHandler</link>
56 {
57 <emphasis role="keyword">public</emphasis>:
58 &#32;&#32;&#32;&#32;BOOL&#32;<link linkend="_class_win32_1_1_core_1_1_native_1_1_unicode_handler_1aba75ad233dfb800918a8da0928696bbc">SetVar</link>(HWND&#32;hwnd,&#32;LPCTSTR&#32;lpText);
59 
60 &#32;&#32;&#32;&#32;BOOL&#32;<link linkend="_class_win32_1_1_core_1_1_native_1_1_unicode_handler_1a16caa495c648eb7fb185d8b67d2793ae">SetVarA</link>(HWND&#32;hwnd,&#32;LPCSTR&#32;lpText);
61 
62 &#32;&#32;&#32;&#32;BOOL&#32;<link linkend="_class_win32_1_1_core_1_1_native_1_1_unicode_handler_1a1bf1d390b3b0b5f820af5aed44392da6">SetVarW</link>(HWND&#32;hwnd,&#32;LPCWSTR&#32;lpText);
63 };
64 
65 }
66 }
67 }
</programlisting></section>
