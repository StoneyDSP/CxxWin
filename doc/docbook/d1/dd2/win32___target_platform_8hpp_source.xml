<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_win32___target_platform_8hpp_source" xml:lang="en-US">
<title>win32_TargetPlatform.hpp</title>
<indexterm><primary>include/CxxWin/modules/Win32_core/system/win32_TargetPlatform.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
14 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
20 <emphasis role="preprocessor">#define&#32;_WIN32_TARGETPLATFORM_HPP_</emphasis>
21 
22 <emphasis role="preprocessor">#if&#32;defined(__x86_64)&#32;&amp;&amp;&#32;\</emphasis>
23 <emphasis role="preprocessor">&#32;&#32;!(defined(_X86_)&#32;||&#32;defined(__i386__)&#32;||&#32;defined(_IA64_))</emphasis>
24 <emphasis role="preprocessor">#if&#32;!defined(_AMD64_)</emphasis>
25 <emphasis role="preprocessor">#define&#32;__ARCHITECTURE_IS_AMD64&#32;</emphasis><emphasis role="comment">//&#32;_AMD64_</emphasis>
26 <emphasis role="preprocessor">#endif</emphasis>
27 <emphasis role="preprocessor">#endif</emphasis>
28 
29 <emphasis role="preprocessor">#if&#32;defined(__ia64__)&#32;&amp;&amp;&#32;\</emphasis>
30 <emphasis role="preprocessor">&#32;&#32;!(defined(_X86_)&#32;||&#32;defined(__x86_64)&#32;||&#32;defined(_AMD64_))</emphasis>
31 <emphasis role="preprocessor">#if&#32;!defined(_IA64_)</emphasis>
32 <emphasis role="preprocessor">#define&#32;__ARCHITECTURE_IS_IA64_&#32;</emphasis><emphasis role="comment">//&#32;_IA64_</emphasis>
33 <emphasis role="preprocessor">#endif</emphasis>
34 <emphasis role="preprocessor">#endif</emphasis>
35 
36 <emphasis role="preprocessor">#if&#32;defined(__ia64__)&#32;||&#32;defined(__x86_64)</emphasis>
37 <emphasis role="preprocessor">#define&#32;__ARCHITECTURE_IS_X64&#32;&#32;</emphasis><emphasis role="comment">//__WIN64__</emphasis>
38 <emphasis role="preprocessor">#else</emphasis>
39 <emphasis role="preprocessor">#if&#32;!defined&#32;(_ARM_)</emphasis>
40 <emphasis role="preprocessor">#define&#32;__ARCHITECTURE_IS_X86&#32;</emphasis><emphasis role="comment">//&#32;__WIN32__</emphasis>
41 <emphasis role="preprocessor">#else</emphasis>
42 <emphasis role="preprocessor">#define&#32;__ARCHITECTURE_IS_ARM32&#32;</emphasis><emphasis role="comment">//&#32;__ARM32__</emphasis>
43 <emphasis role="preprocessor">#endif</emphasis>
44 <emphasis role="preprocessor">#endif</emphasis>
45 
46 
52 <emphasis role="preprocessor">#if&#32;defined(__MSYS__)&#32;||&#32;defined(MSYS)</emphasis>
53 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_MSYS&#32;1</emphasis>
54 <emphasis role="preprocessor">#endif</emphasis>
55 
56 <emphasis role="preprocessor">#if&#32;defined(__CYGWIN__)&#32;||&#32;defined&#32;(CYGWIN)</emphasis>
57 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_CYGWIN&#32;1</emphasis>
58 <emphasis role="preprocessor">#endif</emphasis>
59 
60 <emphasis role="preprocessor">#if&#32;defined&#32;(__MINGW64__)&#32;||&#32;defined(__MINGW32__)&#32;||&#32;defined&#32;(MINGW)</emphasis>
61 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_MINGW&#32;1</emphasis>
62 <emphasis role="preprocessor">#endif</emphasis>
63 
64 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;||&#32;defined(__WIN32__)&#32;||&#32;defined&#32;(WIN32)</emphasis>
65 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_WINDOWS&#32;1</emphasis>
66 <emphasis role="preprocessor">#endif</emphasis>
67 
68 <emphasis role="preprocessor">#if&#32;&#32;defined&#32;(__linux__)&#32;||&#32;defined&#32;(__linux)&#32;||&#32;defined&#32;(linux)</emphasis>
69 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_LINUX&#32;1</emphasis>
70 <emphasis role="preprocessor">#endif</emphasis>
71 
72 <emphasis role="preprocessor">#if&#32;defined&#32;(__APPLE__)</emphasis>
73 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_DARWIN&#32;1</emphasis>
74 <emphasis role="preprocessor">#endif</emphasis>
75 
76 <emphasis role="preprocessor">#if&#32;defined&#32;(__FreeBSD__)&#32;||&#32;defined&#32;(__FreeBSD)</emphasis>
77 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_FREEBSD&#32;1</emphasis>
78 <emphasis role="preprocessor">#endif</emphasis>
79 
80 <emphasis role="preprocessor">#if&#32;defined&#32;(__NetBSD__)&#32;||&#32;defined&#32;(__NetBSD)</emphasis>
81 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_NETBSD&#32;1</emphasis>
82 <emphasis role="preprocessor">#endif</emphasis>
83 
84 <emphasis role="preprocessor">#if&#32;defined&#32;(__OpenBSD__)&#32;||&#32;defined&#32;(__OPENBSD)</emphasis>
85 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_OPENBSD&#32;1</emphasis>
86 <emphasis role="preprocessor">#endif</emphasis>
87 
88 <emphasis role="preprocessor">#if&#32;&#32;defined&#32;(__unix__)&#32;||&#32;defined&#32;(__unix)&#32;||&#32;defined&#32;(unix)</emphasis>
89 <emphasis role="preprocessor">#&#32;&#32;define&#32;__PLATFORM_IS_UNIX&#32;1</emphasis>
90 <emphasis role="preprocessor">#endif</emphasis>
91 
92 <emphasis role="preprocessor">#ifndef&#32;_XOPEN_UNIX</emphasis>
93 <emphasis role="preprocessor">#&#32;&#32;if&#32;(__PLATFORM_IS_UNIX)&#32;&amp;&amp;&#32;defined&#32;(_XOPEN_SOURCE)</emphasis>
94 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;_XOPEN_UNIX&#32;1</emphasis>
95 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
96 <emphasis role="preprocessor">#endif</emphasis>
97 
98 <emphasis role="preprocessor">#ifdef&#32;_XOPEN_VERSION</emphasis>
99 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;3)</emphasis>
100 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_1989&#32;1</emphasis>
101 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
102 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;4)</emphasis>
103 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_1992&#32;1</emphasis>
104 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
105 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;4)&#32;&amp;&amp;&#32;defined(_XOPEN_UNIX)</emphasis>
106 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_1995</emphasis>
107 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
108 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;500)</emphasis>
109 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_1998&#32;1</emphasis>
110 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
111 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;600)</emphasis>
112 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_2003&#32;1</emphasis>
113 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
114 <emphasis role="preprocessor">#&#32;&#32;if&#32;(_XOPEN_VERSION&#32;&gt;=&#32;700)</emphasis>
115 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;define&#32;__STANDARD_XOPEN_2008&#32;1</emphasis>
116 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
117 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
