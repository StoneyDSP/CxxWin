<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="d0/d74/win32___platform_defs_8hpp" kind="file" language="C++">
    <compoundname>win32_PlatformDefs.hpp</compoundname>
    <includedby refid="d6/dce/win32___standard_header_8hpp" local="yes">include/CxxWin/modules/Win32_core/system/win32_StandardHeader.hpp</includedby>
    <invincdepgraph>
      <node id="5">
        <label>include/CxxWin/MainComponent.cpp</label>
        <link refid="db/dfc/_main_component_8cpp"/>
      </node>
      <node id="4">
        <label>include/CxxWin/MainComponent.hpp</label>
        <link refid="df/d11/_main_component_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/CxxWin/WinMain.cpp</label>
        <link refid="da/d9b/_win_main_8cpp"/>
      </node>
      <node id="6">
        <label>include/CxxWin/WinMain.hpp</label>
        <link refid="df/dff/_win_main_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp</label>
        <link refid="d0/d74/win32___platform_defs_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/CxxWin/modules/Win32_core/system/win32_StandardHeader.hpp</label>
        <link refid="d6/dce/win32___standard_header_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/CxxWin/modules/Win32_core/win32_core.cpp</label>
        <link refid="d1/dd0/win32__core_8cpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/CxxWin/modules/Win32_core/win32_core.hpp</label>
        <link refid="d6/dbf/win32__core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/CxxWin/modules/Win32_core/win32_core.mm</label>
        <link refid="d9/db1/win32__core_8mm"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/d74/win32___platform_defs_8hpp_1a09f9dc37c074670133452cb5d04c2056" prot="public" static="no">
        <name>_WIN32_PLATFORMDEFS_HPP_</name>
        <briefdescription>
<para>Contains preprocessor definitions to declare classes and structs as &apos;non-copyable&apos;, &apos;non-moveable&apos;, and to add a leak detector for debugging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" line="20" column="9" bodyfile="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d74/win32___platform_defs_8hpp_1a964d381579febb0cc83dcc69890beec0" prot="public" static="no">
        <name>__DECLARE_NON_COPYABLE</name>
        <param><defname>className</defname></param>
        <initializer>    className (CONST className&amp;) = delete;\
    className&amp; operator= (CONST className&amp;) = delete;</initializer>
        <briefdescription>
<para>This is a shorthand macro for deleting a class&apos;s copy constructor and copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, instead of <programlisting><codeline><highlight class="normal">class<sp/>MyClass</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>etc..</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyClass<sp/>(const<sp/>MyClass&amp;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyClass&amp;<sp/>operator=<sp/>(const<sp/>MyClass&amp;);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>..you can just write:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>MyClass</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>etc..</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>__DECLARE_NON_COPYABLE<sp/>(MyClass)</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" line="48" column="9" bodyfile="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d74/win32___platform_defs_8hpp_1adc9b0f127fefc464e5b4e704259c8ced" prot="public" static="no">
        <name>__DECLARE_NON_MOVEABLE</name>
        <param><defname>className</defname></param>
        <initializer>    className (className&amp;&amp;) = delete;\
    className&amp; operator= (className&amp;&amp;) = delete;</initializer>
        <briefdescription>
<para>This is a shorthand macro for deleting a class&apos;s move constructor and move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" line="55" column="9" bodyfile="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d74/win32___platform_defs_8hpp_1a25195203b724562392caff0a9a74ba84" prot="public" static="no">
        <name>__DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR</name>
        <param><defname>className</defname></param>
        <initializer>    <ref refid="d0/d74/win32___platform_defs_8hpp_1a964d381579febb0cc83dcc69890beec0" kindref="member">__DECLARE_NON_COPYABLE</ref>(className) \
    __LEAK_DETECTOR(className)</initializer>
        <briefdescription>
<para>This is a shorthand way of writing both a __DECLARE_NON_COPYABLE and __LEAK_DETECTOR macro for a class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" line="62" column="9" bodyfile="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d0/d74/win32___platform_defs_8hpp_1aa48cf96123b508654d4c4e9a56e831cb" prot="public" static="no">
        <name>__PREVENT_HEAP_ALLOCATION</name>
        <initializer>   private: \
    static void* operator new (size_t) = delete; \
    static void operator delete (void*) = delete;</initializer>
        <briefdescription>
<para>This macro can be added to class definitions to disable the use of new/delete to allocate the object on the heap, forcing it to only be used as a stack or member variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" line="69" column="9" bodyfile="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains preprocessor definitions to declare classes and structs as &apos;non-copyable&apos;, &apos;non-moveable&apos;, and to add a leak detector for debugging. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>StoneyDSP (<ulink url="mailto:nathanjhood@googlemail.com">nathanjhood@googlemail.com</ulink>)</para>
</simplesect>
</para>
<para><simplesect kind="version"><para>1.0.0 </para>
</simplesect>
<simplesect kind="date"><para>2023-08-30</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2023 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="d0/d74/win32___platform_defs_8hpp_1a09f9dc37c074670133452cb5d04c2056" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WIN32_PLATFORMDEFS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight></codeline>
<codeline lineno="48" refid="d0/d74/win32___platform_defs_8hpp_1a964d381579febb0cc83dcc69890beec0" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>__DECLARE_NON_COPYABLE(className)<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>className<sp/>(CONST<sp/>className&amp;)<sp/>=<sp/>delete;\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>className&amp;<sp/>operator=<sp/>(CONST<sp/>className&amp;)<sp/>=<sp/>delete;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d0/d74/win32___platform_defs_8hpp_1adc9b0f127fefc464e5b4e704259c8ced" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DECLARE_NON_MOVEABLE(className)<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>className<sp/>(className&amp;&amp;)<sp/>=<sp/>delete;\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>className&amp;<sp/>operator=<sp/>(className&amp;&amp;)<sp/>=<sp/>delete;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="d0/d74/win32___platform_defs_8hpp_1a25195203b724562392caff0a9a74ba84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(className)<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__DECLARE_NON_COPYABLE(className)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>__LEAK_DETECTOR(className)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d0/d74/win32___platform_defs_8hpp_1aa48cf96123b508654d4c4e9a56e831cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PREVENT_HEAP_ALLOCATION<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/>private:<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void*<sp/>operator<sp/>new<sp/>(size_t)<sp/>=<sp/>delete;<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>operator<sp/>delete<sp/>(void*)<sp/>=<sp/>delete;</highlight></codeline>
    </programlisting>
    <location file="include/CxxWin/modules/Win32_core/system/win32_PlatformDefs.hpp"/>
  </compounddef>
</doxygen>
