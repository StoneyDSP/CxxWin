<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="d9/dd6/_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>CxxWin</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Win-Msys2-UCRT64](https://github.com/StoneyDSP/CxxWin/actions/workflows/MSYS_UCRT64.yml/badge.svg)</highlight></codeline>
<codeline><highlight class="normal">![Win-Msys2-MINGW64](https://github.com/StoneyDSP/CxxWin/actions/workflows/MSYS_MINGW64.yml/badge.svg)</highlight></codeline>
<codeline><highlight class="normal">![Win-Msys2-CLANG64](https://github.com/StoneyDSP/CxxWin/actions/workflows/MSYS_CLANG64.yml/badge.svg)</highlight></codeline>
<codeline><highlight class="normal">![Win-Msys2-MINGW32](https://github.com/StoneyDSP/CxxWin/actions/workflows/MSYS_MINGW32.yml/badge.svg)</highlight></codeline>
<codeline><highlight class="normal">![Win-Msys2-CLANG32](https://github.com/StoneyDSP/CxxWin/actions/workflows/MSYS_CLANG32.yml/badge.svg)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Win32<sp/>API<sp/>with<sp/>C++<sp/>and<sp/>Direct2D.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>quick<sp/>one-and-done<sp/>Win32<sp/>API<sp/>project<sp/>implementing<sp/>a<sp/>simple<sp/>COM<sp/>application<sp/>window<sp/>for<sp/>Windows<sp/>platforms<sp/>in<sp/>C++.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Screenshot](https://raw.githubusercontent.com/StoneyDSP/CxxWin/main/share/doc/CxxWin/screenshot_installer_example.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>simple<sp/>application<sp/>draws<sp/>three<sp/>semi-transparent<sp/>circles<sp/>within<sp/>a<sp/>main<sp/>window,<sp/>given<sp/>a<sp/>shared<sp/>set<sp/>of<sp/>co-ordinates<sp/>for<sp/>their<sp/>(relative)<sp/>position<sp/>and<sp/>size.<sp/>The<sp/>main<sp/>window<sp/>itself<sp/>is<sp/>fully<sp/>resizeable;<sp/>the<sp/>rendered<sp/>circles<sp/>will<sp/>automatically<sp/>re-calculate<sp/>their<sp/>own<sp/>properties<sp/>in<sp/>relation<sp/>to<sp/>the<sp/>resizing<sp/>of<sp/>the<sp/>main<sp/>window,<sp/>while<sp/>maintaining<sp/>the<sp/>shared<sp/>position<sp/>and<sp/>size<sp/>co-ordinates.<sp/>In<sp/>cases<sp/>where<sp/>two<sp/>circles<sp/>overlap,<sp/>their<sp/>alpha<sp/>channels<sp/>shall<sp/>blend<sp/>(the<sp/>background<sp/>fill<sp/>is<sp/>also<sp/>factored<sp/>into<sp/>this),<sp/>causing<sp/>a<sp/>pleasing<sp/>overlapping<sp/>effect.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Screenshot](https://raw.githubusercontent.com/StoneyDSP/CxxWin/main/share/doc/CxxWin/screenshot_circles_example.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">While<sp/>none<sp/>of<sp/>the<sp/>above<sp/>makes<sp/>for<sp/>a<sp/>particularly<sp/>interesting<sp/>nor<sp/>useful<sp/>application<sp/>on<sp/>it&apos;s<sp/>own,<sp/>the<sp/>codebase<sp/>is<sp/>written<sp/>in<sp/>C++<sp/>using<sp/>the<sp/>Win32<sp/>API,<sp/>using<sp/>Direct2D<sp/>and<sp/>Microsoft&apos;s<sp/>COM<sp/>(Component<sp/>Object</highlight></codeline>
<codeline><highlight class="normal">Model)<sp/>class<sp/>inheritance<sp/>model,<sp/>of<sp/>which<sp/>C++<sp/>is<sp/>a<sp/>first<sp/>class<sp/>language.<sp/>The<sp/>resulting<sp/>application<sp/>makes<sp/>use<sp/>of<sp/>the<sp/>most<sp/>recent<sp/>advances<sp/>in<sp/>C++<sp/>language<sp/>standards<sp/>and<sp/>compiler<sp/>features,<sp/>is<sp/>buildable<sp/>on<sp/>and<sp/>for<sp/>systems<sp/>pre-dating<sp/>Windows<sp/>7,<sp/>and<sp/>uses<sp/>a<sp/>logical,<sp/>modular,<sp/>object-based<sp/>approach<sp/>for<sp/>portability,<sp/>reusability,<sp/>and<sp/>maintainability.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>&lt;a<sp/>href=&quot;https://learn.microsoft.com/en-us/windows/win32/learnwin32/introduction-to-windows-programming-in-c--&quot;&gt;the<sp/>MSDN<sp/>documentation<sp/>for<sp/>more&lt;/a&gt;.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Modernized,<sp/>modularized,<sp/>hardened...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>examples<sp/>given<sp/>in<sp/>the<sp/>MSDN<sp/>documentation<sp/>have<sp/>here<sp/>been<sp/>both<sp/>modernized,<sp/>and<sp/>hardened;<sp/>the<sp/>codebase<sp/>aims<sp/>to<sp/>make<sp/>use<sp/>of<sp/>C++20&apos;s<sp/>&apos;modules&apos;<sp/>fucntionality<sp/>for<sp/>re-usability<sp/>and<sp/>to<sp/>further<sp/>highlight<sp/>the<sp/>Object-Oriented<sp/>Programming<sp/>approach<sp/>that<sp/>is<sp/>the<sp/>core<sp/>of<sp/>COM,<sp/>the<sp/>Win32<sp/>API,<sp/>and<sp/>of<sp/>course<sp/>C++<sp/>itself.<sp/>The<sp/>resulting<sp/>windowed<sp/>GUI<sp/>application<sp/>has<sp/>been<sp/>developed,<sp/>built,<sp/>and<sp/>tested<sp/>using<sp/>a<sp/>wide<sp/>variety<sp/>of<sp/>modern<sp/>C++<sp/>compiler<sp/>toolchains,<sp/>including<sp/>popular<sp/>Unix-like<sp/>subsystems<sp/>supporting<sp/>GNU,<sp/>Clang,<sp/>and<sp/>cross-compiling<sp/>scenarios.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>codebase<sp/>automatically<sp/>calls<sp/>on<sp/>the<sp/>correct<sp/>charset<sp/>(think<sp/>&quot;ANSI&quot;<sp/>or<sp/>&quot;Unicode&quot;)<sp/>for<sp/>the<sp/>build<sp/>environment,<sp/>pulls<sp/>in<sp/>the<sp/>required<sp/>header<sp/>sets,<sp/>and<sp/>links<sp/>itself<sp/>to<sp/>the<sp/>required<sp/>system<sp/>libraries,<sp/>thanks<sp/>to<sp/>modern<sp/>compiler<sp/>feature<sp/>detection<sp/>macros.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Additionally,<sp/>a<sp/>&apos;high<sp/>DPI<sp/>aware<sp/>manifest&apos;<sp/>is<sp/>embedded<sp/>into<sp/>the<sp/>application<sp/>definition<sp/>file,<sp/>along<sp/>with<sp/>further<sp/>compiler-level<sp/>specifications<sp/>to<sp/>embed<sp/>the<sp/>application<sp/>with<sp/>some<sp/>backwards<sp/>compatibility<sp/>for<sp/>pre-<sp/>Windows<sp/>7<sp/>environments.<sp/>Modern<sp/>compiler<sp/>and<sp/>language<sp/>features<sp/>automatically<sp/>link<sp/>the<sp/>codebase<sp/>with<sp/>it&apos;s<sp/>required<sp/>system<sp/>libraries<sp/>and<sp/>headers<sp/>based<sp/>on<sp/>system<sp/>platform,<sp/>architecture,<sp/>and<sp/>other<sp/>environmental<sp/>features.<sp/>Many<sp/>portability<sp/>and<sp/>reusability<sp/>features<sp/>are<sp/>coded<sp/>in,<sp/>meaning<sp/>a<sp/>lower<sp/>dependency<sp/>on<sp/>buildsystems<sp/>and<sp/>less<sp/>complex<sp/>&quot;configure/compile/build/link&quot;<sp/>runs.<sp/>Some<sp/>common<sp/>build<sp/>scripts<sp/>are<sp/>included<sp/>to<sp/>demonstrate<sp/>this</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>How<sp/>it<sp/>works</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>principle,<sp/>the<sp/>codebase<sp/>is<sp/>structured<sp/>such<sp/>that<sp/>the<sp/>Win32-based<sp/>code<sp/>is<sp/>layered<sp/>into<sp/>subsets<sp/>of<sp/>modules,<sp/>primarily<sp/>containing<sp/>headers<sp/>that<sp/>define<sp/>classes<sp/>and<sp/>helper<sp/>functions<sp/>that<sp/>your<sp/>project<sp/>should<sp/>inherit<sp/>(using<sp/>OOP<sp/>and<sp/>COM<sp/>-<sp/>see<sp/>the<sp/>docs<sp/>linked<sp/>above)<sp/>in<sp/>a<sp/>local<sp/>project-level<sp/>set<sp/>of<sp/>files.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>this<sp/>purposes<sp/>of<sp/>this<sp/>demo<sp/>project,<sp/>the<sp/>&quot;local<sp/>project&quot;<sp/>files<sp/>are<sp/>located<sp/>at<sp/>the<sp/>root<sp/>of<sp/>the<sp/>&apos;/include/(projectName)/&apos;<sp/>directory,<sp/>and<sp/>are<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>MainComponent.hpp,<sp/>MainComponent.cpp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>These<sp/>two<sp/>files<sp/>declare<sp/>and<sp/>define<sp/>(respectively)<sp/>your<sp/>project&apos;s<sp/>&apos;main<sp/>window&apos;<sp/>and<sp/>it&apos;s<sp/>functionality,<sp/>it&apos;s<sp/>contents,<sp/>and<sp/>it&apos;s<sp/>behaviour.<sp/>The<sp/>class<sp/>is<sp/>named<sp/>&apos;MainComponent&apos;,<sp/>and<sp/>inherits<sp/>from<sp/>both<sp/>the<sp/>&apos;MainWindow&apos;<sp/>and,<sp/>in<sp/>turn,<sp/>the<sp/>&apos;BaseWindow&apos;<sp/>classes.<sp/>The<sp/>&apos;DPIScale&apos;<sp/>class<sp/>is<sp/>also<sp/>utilized<sp/>here;<sp/>a<sp/>pair<sp/>of<sp/>static<sp/>members<sp/>of<sp/>&apos;DPIScale&apos;<sp/>are<sp/>initialized<sp/>and<sp/>utilized<sp/>as<sp/>co-ordinates<sp/>for<sp/>our<sp/>&apos;main<sp/>window&apos;.<sp/>A<sp/>&apos;SmartPointer&apos;<sp/>class<sp/>(plus<sp/>some<sp/>helpers)<sp/>is<sp/>also<sp/>used<sp/>to<sp/>handle<sp/>the<sp/>critical<sp/>safe<sp/>allocation<sp/>and<sp/>de-allocation<sp/>of<sp/>our<sp/>handles<sp/>on<sp/>system-level<sp/>memory<sp/>resources,<sp/>such<sp/>as<sp/>keyboard<sp/>and<sp/>mouse<sp/>input.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>part<sp/>of<sp/>the<sp/>codebase<sp/>will<sp/>typically<sp/>be<sp/>compiled<sp/>into<sp/>a<sp/>binary<sp/>library<sp/>file,<sp/>such<sp/>as<sp/>a<sp/>&apos;.dll&apos;.<sp/>Other<sp/>binaries<sp/>can<sp/>then<sp/>link<sp/>to<sp/>it,<sp/>providing<sp/>access<sp/>to<sp/>it&apos;s<sp/>contents<sp/>to<sp/>the<sp/>linkee.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>WinMain.hpp,<sp/>WinMain.cpp</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>These<sp/>two<sp/>files<sp/>declare<sp/>and<sp/>define<sp/>(respectively)<sp/>your<sp/>project&apos;s<sp/>&apos;runtime<sp/>entry<sp/>point&apos;<sp/>-<sp/>this<sp/>code<sp/>is<sp/>essentially<sp/>the<sp/>interface<sp/>for<sp/>the<sp/>resulting<sp/>&apos;*.exe&apos;<sp/>file<sp/>itself<sp/>and<sp/>what<sp/>happens<sp/>when<sp/>you<sp/>launch<sp/>that<sp/>file.<sp/>As<sp/>you<sp/>might<sp/>expect,<sp/>it<sp/>*includes*<sp/>the<sp/>&apos;MainComponent&apos;<sp/>files<sp/>(the<sp/>code<sp/>for<sp/>the<sp/>main<sp/>window)<sp/>using<sp/>the<sp/>usual<sp/>preprocessor<sp/>include<sp/>directive.<sp/>However,<sp/>all<sp/>of<sp/>the<sp/>main<sp/>window&apos;s<sp/>behaviour<sp/>shall<sp/>remain<sp/>in<sp/>it&apos;s<sp/>own<sp/>files.<sp/>The<sp/>primary<sp/>task<sp/>of<sp/>the<sp/>&apos;WinMain&apos;<sp/>function<sp/>is<sp/>to<sp/>handle<sp/>&quot;messages&quot;<sp/>in<sp/>response<sp/>to<sp/>a<sp/>well-defined<sp/>set<sp/>of<sp/>user<sp/>inputs,<sp/>run<sp/>a<sp/>quick<sp/>sanity<sp/>check<sp/>on<sp/>the<sp/>message,<sp/>and<sp/>either<sp/>pass<sp/>it<sp/>to<sp/>our<sp/>&apos;MainComponent&apos;<sp/>for<sp/>further<sp/>processing<sp/>(see<sp/>the<sp/>&apos;HandleMessage()&apos;<sp/>and<sp/>&apos;WindowProc()&apos;<sp/>Window<sp/>object<sp/>functions),<sp/>or<sp/>safely<sp/>resume<sp/>it&apos;s<sp/>current<sp/>state.<sp/>It<sp/>is<sp/>*critical*<sp/>that<sp/>all<sp/>memory<sp/>resources<sp/>are<sp/>free<sp/>when<sp/>this<sp/>function<sp/>ends<sp/>(such<sp/>as<sp/>when<sp/>the<sp/>program<sp/>is<sp/>closed),<sp/>which<sp/>requires<sp/>the<sp/>use<sp/>of<sp/>&apos;SmartPointer&apos;<sp/>-<sp/>type<sp/>classes<sp/>and<sp/>functionality<sp/>(such<sp/>as<sp/>&apos;std::unique_ptr&apos;<sp/>and<sp/>friends<sp/>provide<sp/>for<sp/>raw<sp/>data<sp/>types).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>part<sp/>of<sp/>the<sp/>codebase<sp/>will<sp/>typically,<sp/>but<sp/>not<sp/>always,<sp/>be<sp/>compiled<sp/>into<sp/>a<sp/>binary<sp/>executable<sp/>file,<sp/>such<sp/>as<sp/>a<sp/>&apos;.exe&apos;.<sp/>Remember<sp/>that<sp/>it<sp/>*includes*<sp/>the<sp/>&apos;MainComponent.hpp&apos;<sp/>file<sp/>using<sp/>a<sp/>single-line<sp/>preprocessor<sp/>directive,<sp/>which<sp/>makes<sp/>*every<sp/>symbol<sp/>declaration<sp/>and<sp/>inlined<sp/>function*<sp/>in<sp/>&apos;MainComponent.hpp&apos;<sp/>-<sp/>*and*<sp/>in<sp/>it&apos;s<sp/>own<sp/>&quot;include&quot;s<sp/>of<sp/>other<sp/>files<sp/>-<sp/>accessible<sp/>to<sp/>&apos;WinMain()&apos;.<sp/>In<sp/>this<sp/>scenario,<sp/>any<sp/>compiled<sp/>library<sp/>binaries<sp/>associated<sp/>with<sp/>included<sp/>header(s)<sp/>will<sp/>need<sp/>to<sp/>be<sp/>linked<sp/>with<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>building<sp/>process,<sp/>making<sp/>the<sp/>actual<sp/>*definitions*<sp/>of<sp/>those<sp/>included<sp/>declarations<sp/>also<sp/>accessible<sp/>(any<sp/>definition<sp/>that<sp/>gets<sp/>used<sp/>by<sp/>our<sp/>application<sp/>*needs*<sp/>to<sp/>be<sp/>defined,<sp/>somewhere,<sp/>in<sp/>order<sp/>to<sp/>be<sp/>compiled<sp/>into<sp/>a<sp/>translation<sp/>unit<sp/>for<sp/>the<sp/>linker<sp/>to<sp/>eventually<sp/>link<sp/>with).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Any<sp/>further<sp/>additional<sp/>functionality<sp/>added<sp/>to<sp/>the<sp/>project<sp/>should<sp/>likewise<sp/>be<sp/>declared<sp/>and<sp/>defined<sp/>in<sp/>it&apos;s<sp/>own<sp/>set<sp/>of<sp/>files,<sp/>and<sp/>included<sp/>similarly<sp/>-<sp/>usually,<sp/>you<sp/>will<sp/>probably<sp/>just<sp/>leave<sp/>this<sp/>pair<sp/>of<sp/>&apos;WinMain&apos;<sp/>files<sp/>alone<sp/>for<sp/>the<sp/>most<sp/>part,<sp/>and<sp/>new<sp/>files<sp/>containing<sp/>new<sp/>functionality<sp/>will<sp/>probably<sp/>find<sp/>themeselves<sp/>included<sp/>elsewhere<sp/>in<sp/>your<sp/>program,<sp/>eventually<sp/>reaching<sp/>the<sp/>&apos;WinMain&apos;<sp/>files<sp/>via<sp/>the<sp/>already-defined<sp/>inclusion<sp/>of<sp/>&apos;MainComponent&apos;.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Inside<sp/>of<sp/>the<sp/>&apos;/include/CxxWin&apos;<sp/>directory<sp/>is<sp/>another<sp/>sub-directory<sp/>named<sp/>&apos;/modules&apos;,<sp/>which<sp/>in<sp/>this<sp/>instance<sp/>models<sp/>itself<sp/>on<sp/>a<sp/>very<sp/>small<sp/>subset<sp/>of<sp/>the<sp/>&lt;a<sp/>href=&quot;https://github.com/juce-framework/JUCE.git&quot;&gt;JUCE<sp/>Framework&lt;/a&gt;&apos;s<sp/>take<sp/>on<sp/>C++20<sp/>module<sp/>support.<sp/>There<sp/>is<sp/>just<sp/>enough<sp/>code<sp/>here<sp/>to<sp/>support<sp/>the<sp/>MSDN<sp/>docs<sp/>Win32<sp/>API<sp/>examples,<sp/>and<sp/>hopefully<sp/>to<sp/>point<sp/>forward<sp/>an<sp/>interesting<sp/>way<sp/>to<sp/>continue<sp/>to<sp/>integrate<sp/>more<sp/>functionality<sp/>and<sp/>features<sp/>from<sp/>the<sp/>&lt;a<sp/>href=&quot;https://github.com/microsoft/Windows-classic-samples.git&quot;&gt;many<sp/>other<sp/>examples<sp/>to<sp/>be<sp/>found<sp/>in<sp/>the<sp/>wild&lt;/a&gt;,<sp/>using<sp/>the<sp/>most<sp/>modern<sp/>C++<sp/>functionality.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">BONUS:<sp/>check<sp/>&apos;/.vscode/tasks.json&apos;<sp/>for<sp/>instructions<sp/>on<sp/>how<sp/>to<sp/>build<sp/>on<sp/>Windows<sp/>with<sp/>each<sp/>of<sp/>the<sp/>&lt;a<sp/>href=&quot;https://www.msys2.org/docs/environments/&quot;&gt;Msys64<sp/>subsystems&lt;/a&gt;.<sp/>Note<sp/>that<sp/>to<sp/>build<sp/>using<sp/>the<sp/>&quot;MSYS2&quot;<sp/>sub-system<sp/>from<sp/>within<sp/>VSCode,<sp/>you<sp/>must<sp/>launch<sp/>VSCode<sp/>from<sp/>the<sp/>Msys64<sp/>MSYS2<sp/>environment<sp/>command<sp/>line.<sp/>All<sp/>of<sp/>the<sp/>others<sp/>should<sp/>build<sp/>natively.<sp/>All<sp/>resulting<sp/>&apos;.exe&apos;<sp/>binaries<sp/>run<sp/>natively<sp/>on<sp/>Windows.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">BONUS<sp/>2:<sp/>Additional<sp/>support<sp/>for<sp/>CMake<sp/>builds,<sp/>making<sp/>the<sp/>configure/build<sp/>process<sp/>as<sp/>easy<sp/>as<sp/>two<sp/>console<sp/>commands.<sp/>If<sp/>attempting<sp/>to<sp/>build<sp/>Win32<sp/>API<sp/>apps<sp/>with<sp/>CMake<sp/>using<sp/>Msys64/MinGW<sp/>toolchains,<sp/>check<sp/>&lt;a<sp/>href=&quot;https://github.com/StoneyDSP/msys2-toolchain.git&quot;&gt;my<sp/>MSYS2<sp/>toolchain<sp/>helper&lt;/a&gt;<sp/>project.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Thanks<sp/>for<sp/>reading!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>References:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>&lt;a<sp/>href=&quot;https://learn.microsoft.com/en-us/windows/win32/learnwin32/introduction-to-windows-programming-in-c--&quot;&gt;MSDN<sp/>documentation:<sp/>Win32<sp/>API<sp/>in<sp/>C&lt;/a&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>&lt;a<sp/>href=&quot;https://github.com/microsoft/Windows-classic-samples.git&quot;&gt;Classic<sp/>Windows<sp/>programming<sp/>samples&lt;/a&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>&lt;a<sp/>href=&quot;https://github.com/juce-framework/JUCE.git&quot;&gt;JUCE<sp/>Framework&lt;/a&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>&lt;a<sp/>href=&quot;https://www.msys2.org/docs/environments/&quot;&gt;Msys64<sp/>subsystems&lt;/a&gt;</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
