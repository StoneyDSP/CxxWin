<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="dd/dbb/class_smart_pointer_helper_base" kind="class" language="C++" prot="public">
    <compoundname>SmartPointerHelperBase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">First</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ComClasses</basecompoundref>
    <includes refid="d6/d42/win32___smart_pointer_8hpp" local="no">win32_SmartPointer.hpp</includes>
    <templateparamlist>
      <param>
        <type>class First</type>
      </param>
      <param>
        <type>class...</type>
        <declname>ComClasses</declname>
        <defname>ComClasses</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dd/dbb/class_smart_pointer_helper_base_1ad2bc91bd39ccd269a3eec9cdcce0f8cf" prot="protected" static="no" mutable="no">
        <type>ULONG</type>
        <definition>ULONG SmartPointerHelperBase&lt; First, ComClasses &gt;::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <qualifiedname>SmartPointerHelperBase::refCount</qualifiedname>
        <briefdescription>
<para>The underlying reference counter to the pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="101" column="11" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1ac76861e9458ab17c981b2b76f5890321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SmartPointerHelperBase&lt; First, ComClasses &gt;::SmartPointerHelperBase</definition>
        <argsstring>(unsigned int initRef)</argsstring>
        <name>SmartPointerHelperBase</name>
        <qualifiedname>SmartPointerHelperBase::SmartPointerHelperBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>initRef</declname>
        </param>
        <briefdescription>
<para>Construct a new &apos;<ref refid="dd/dbb/class_smart_pointer_helper_base" kindref="compound">SmartPointerHelperBase</ref>&apos; object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initRef</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="88" column="5" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.cpp" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1aef037e04d1a2ee08824b405b077d4b09" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual SmartPointerHelperBase&lt; First, ComClasses &gt;::~SmartPointerHelperBase</definition>
        <argsstring>()=default</argsstring>
        <name>~SmartPointerHelperBase</name>
        <qualifiedname>SmartPointerHelperBase::~SmartPointerHelperBase</qualifiedname>
        <briefdescription>
<para>Destroy the &apos;<ref refid="dd/dbb/class_smart_pointer_helper_base" kindref="compound">SmartPointerHelperBase</ref>&apos; object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="90" column="13"/>
      </memberdef>
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG STDMETHODCALLTYPE</type>
        <definition>ULONG STDMETHODCALLTYPE SmartPointerHelperBase&lt; First, ComClasses &gt;::AddRef</definition>
        <argsstring>()</argsstring>
        <name>AddRef</name>
        <qualifiedname>SmartPointerHelperBase::AddRef</qualifiedname>
        <briefdescription>
<para>Add a new reference to the pointer, increasing the counter by one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ULONG </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="92" column="29" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.cpp" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ULONG STDMETHODCALLTYPE</type>
        <definition>ULONG SmartPointerHelperBase&lt; First, ComClasses &gt;::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <qualifiedname>SmartPointerHelperBase::Release</qualifiedname>
        <briefdescription>
<para>Release a reference to the pointer, decreasing the counter by one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>ULONG </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="93" column="29" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.cpp" bodystart="266" bodyend="274"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1accdc2a95363ae4f3e76d5dc00e8fef38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>HRESULT STDMETHODCALLTYPE</type>
        <definition>HRESULT STDMETHODCALLTYPE SmartPointerHelperBase&lt; First, ComClasses &gt;::castToType</definition>
        <argsstring>(void **result)</argsstring>
        <name>castToType</name>
        <qualifiedname>SmartPointerHelperBase::castToType</qualifiedname>
        <param>
          <type>void **</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Add a new reference to the pointer (increasing the counter by one), and attempt to cast to type &apos;T&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned &apos;HRESULT&apos; can be checked so that any unsuccessful casts might then be freed with the &apos;<ref refid="dd/dbb/class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd" kindref="member">Release()</ref>&apos; method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HRESULT </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="104" column="31" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.cpp" bodystart="288" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="dd/dbb/class_smart_pointer_helper_base_1a93350be3711ec44389ccb85607da79e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HRESULT STDMETHODCALLTYPE</type>
        <definition>HRESULT SmartPointerHelperBase&lt; First, ComClasses &gt;::QueryInterface</definition>
        <argsstring>(REFIID riid, void **ppvObject)</argsstring>
        <name>QueryInterface</name>
        <qualifiedname>SmartPointerHelperBase::QueryInterface</qualifiedname>
        <param>
          <type>REFIID</type>
          <declname>riid</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>ppvObject</declname>
        </param>
        <briefdescription>
<para>Query a COM object for a pointer to one its interfaces, identifying the interface by a reference to its interface identifier (IID). </para>
        </briefdescription>
        <detaileddescription>
<para>If the COM object implements the interface, then it returns a pointer to that interface after calling &apos;<ref refid="dd/dbb/class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e" kindref="member">SmartPointerHelperBase::AddRef()</ref>&apos; on it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>riid</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the identifier of the interface being queried for.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ppvObject</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer to an interface with the IID specified in the &apos;riid&apos; parameter. Because you pass the address of an interface pointer, the method can overwrite that address with the pointer to the interface being queried for. Upon successful return, *ppvObject (the dereferenced address) contains a pointer to the requested interface. If the object doesn&apos;t support the interface, the method sets *ppvObject (the dereferenced address) to nullptr.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HRESULT; This method returns &apos;S_OK&apos; if the interface is supported, and &apos;E_NOINTERFACE&apos; otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="105" column="31" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The &apos;<ref refid="dd/dbb/class_smart_pointer_helper_base" kindref="compound">SmartPointerHelperBase</ref>&apos; class. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>First</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ComClasses</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>ComClasses</label>
      </node>
      <node id="2">
        <label>First</label>
      </node>
      <node id="1">
        <label>SmartPointerHelperBase&lt; First, ComClasses &gt;</label>
        <link refid="dd/dbb/class_smart_pointer_helper_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>ComClasses</label>
      </node>
      <node id="2">
        <label>First</label>
      </node>
      <node id="1">
        <label>SmartPointerHelperBase&lt; First, ComClasses &gt;</label>
        <link refid="dd/dbb/class_smart_pointer_helper_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" line="85" column="1" bodyfile="include/CxxWin/modules/Win32_core/memory/win32_SmartPointer.hpp" bodystart="86" bodyend="106"/>
    <listofallmembers>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1a2c9426410eeb136beba8123b5d84dc6e" prot="public" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>AddRef</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1accdc2a95363ae4f3e76d5dc00e8fef38" prot="protected" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>castToType</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1a93350be3711ec44389ccb85607da79e8" prot="protected" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>QueryInterface</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1ad2bc91bd39ccd269a3eec9cdcce0f8cf" prot="protected" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>refCount</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1a693a3f65e96897ad99ccc1e95c7c0fcd" prot="public" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>Release</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1ac76861e9458ab17c981b2b76f5890321" prot="public" virt="non-virtual"><scope>SmartPointerHelperBase</scope><name>SmartPointerHelperBase</name></member>
      <member refid="dd/dbb/class_smart_pointer_helper_base_1aef037e04d1a2ee08824b405b077d4b09" prot="public" virt="virtual"><scope>SmartPointerHelperBase</scope><name>~SmartPointerHelperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
